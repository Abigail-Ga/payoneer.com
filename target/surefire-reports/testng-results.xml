<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="32607" started-at="2021-03-21T13:24:17 IST" finished-at="2021-03-21T13:24:49 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="32607" started-at="2021-03-21T13:24:17 IST" finished-at="2021-03-21T13:24:49 IST">
      <class name="tests.Sanity">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.Sanity@578486a3]" name="beforeClass" is-config="true" duration-ms="14397" started-at="2021-03-21T13:24:17 IST" finished-at="2021-03-21T13:24:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.Sanity@578486a3]" name="beforeMethod" is-config="true" duration-ms="7" started-at="2021-03-21T13:24:31 IST" finished-at="2021-03-21T13:24:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Sanity.go_to_registration() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="go_to_registration()[pri:1, instance:tests.Sanity@578486a3]" name="go_to_registration" duration-ms="720" started-at="2021-03-21T13:24:31 IST" description="verify date" finished-at="2021-03-21T13:24:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- go_to_registration -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.Sanity@578486a3]" name="afterMethod" is-config="true" duration-ms="4865" started-at="2021-03-21T13:24:32 IST" finished-at="2021-03-21T13:24:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=go_to_registration status=SUCCESS method=Sanity.go_to_registration()[pri:1, instance:tests.Sanity@578486a3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.Sanity@578486a3]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-03-21T13:24:37 IST" finished-at="2021-03-21T13:24:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Sanity.selectedFromFild() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="selectedFromFild()[pri:2, instance:tests.Sanity@578486a3]" name="selectedFromFild" duration-ms="3113" started-at="2021-03-21T13:24:37 IST" description="verify date" finished-at="2021-03-21T13:24:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectedFromFild -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.Sanity@578486a3]" name="afterMethod" is-config="true" duration-ms="444" started-at="2021-03-21T13:24:40 IST" finished-at="2021-03-21T13:24:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectedFromFild status=SUCCESS method=Sanity.selectedFromFild()[pri:2, instance:tests.Sanity@578486a3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.Sanity@578486a3]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-03-21T13:24:40 IST" finished-at="2021-03-21T13:24:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Sanity.registerSecundPage() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="registerSecundPage()[pri:3, instance:tests.Sanity@578486a3]" name="registerSecundPage" duration-ms="177" started-at="2021-03-21T13:24:40 IST" description="verify date" finished-at="2021-03-21T13:24:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerSecundPage -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.Sanity@578486a3]" name="afterMethod" is-config="true" duration-ms="417" started-at="2021-03-21T13:24:41 IST" finished-at="2021-03-21T13:24:41 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerSecundPage status=SUCCESS method=Sanity.registerSecundPage()[pri:3, instance:tests.Sanity@578486a3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.Sanity@578486a3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-03-21T13:24:41 IST" finished-at="2021-03-21T13:24:41 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Sanity.verifyText() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="verifyText()[pri:4, instance:tests.Sanity@578486a3]" name="verifyText" duration-ms="7178" started-at="2021-03-21T13:24:41 IST" description="verify date" finished-at="2021-03-21T13:24:48 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at tests.Sanity.verifyText(Sanity.java:83)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyText -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.Sanity@578486a3]" name="afterMethod" is-config="true" duration-ms="273" started-at="2021-03-21T13:24:48 IST" finished-at="2021-03-21T13:24:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyText status=FAILURE method=Sanity.verifyText()[pri:4, instance:tests.Sanity@578486a3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:tests.Sanity@578486a3]" name="afterClass" is-config="true" duration-ms="977" started-at="2021-03-21T13:24:48 IST" finished-at="2021-03-21T13:24:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- tests.Sanity -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
